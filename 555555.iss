; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "信科视界(window体验版)"
#define MyAppVersion "1.2"
#define MyAppPublisher ""
#define MyAppURL ""
#define MyAppExeName "xksj.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{207DF7DD-FE24-4D83-85C4-9F7C85630F51}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={sd}\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes
ChangesAssociations=yes

[Languages]
Name: "chinesesimp"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: checkablealone

[Files]
Source: "C:\Users\pyj\Desktop\NewDesktop\xksj-win32-ia32\xksj.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\pyj\Desktop\NewDesktop\xksj-win32-ia32\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\pyj\Desktop\NewDesktop\xksj-win32-ia32\CaptureInstall.exe"; DestDir: "{app}";  AfterInstall: MyAfterInstall1

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
procedure MyAfterInstall1();
var 
    ResultCode: Integer;
begin
    Exec(ExpandConstant(CurrentFileName), '/verysilent /norestart', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
end;

// 自定义函数，判断软件是否运行，参数为需要判断的软件的exe名称
function KDetectSoft(strExeName: String): Boolean;
// 变量定义
var ErrorCode: Integer;
var bRes: Boolean;
var strFileContent: AnsiString;
var strTmpPath: String;  // 临时目录
var strTmpFile: String;  // 临时文件，保存查找软件数据结果
var strCmdFind: String;  // 查找软件命令
var strCmdKill: String;  // 终止软件命令
begin
  strTmpPath := GetTempDir();
  strTmpFile := Format('%sfindSoftRes.txt', [strTmpPath]);
  strCmdFind := Format('/c tasklist /nh|find /c /i "%s" > "%s"', [strExeName, strTmpFile]);
  strCmdKill := Format('/c taskkill /f /t /im %s', [strExeName]);
  bRes := ShellExec('open', ExpandConstant('{cmd}'), strCmdFind, '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
  if bRes then begin
  //载入指定的二进制或非Unicode文本文件到指定的字符串。如果成功返回 True，否则返回 False。
      bRes := LoadStringFromFile(strTmpFile, strFileContent); 
      strFileContent := Trim(strFileContent);  //////从给出的字符串 S 中去除起始和结束部分的空格和控制符。
      if bRes then begin
         if StrToInt(strFileContent) > 0 then begin      /////StrToInt 函数转换字符串 S 到一个数字。如果 S 不能转换到一个有效的数字，StrToInt 返回 Def 中的数字
            if MsgBox(ExpandConstant('{cm:checkSoftTip}'), mbConfirmation, MB_OKCANCEL) = IDOK then begin
             // 终止程序
             ////执行指定的可执行文件。使用 Wait 指定 InstExec 是否应该立即返回或等待，直到可执行文件终止或空闲。如果指定的文件已执行则返回 True，否则返回 False。如果返回 True 并且 Wait 是 WaitUntilTerminated，那么 ResultCode 返回执行的文件的退出代码。如果返回 False，那么 ResultCode 指定遇到的错误。使用 SysErrorMessage(ResultCode) 获取错误描述。
               ShellExec('open', ExpandConstant('{cmd}'), strCmdKill, '', SW_HIDE, ewNoWait, ErrorCode);  
               Result:= true;// 继续安装
               end else begin
               Result:= false;// 安装程序退出
               Exit;
               end;
            end else begin
            Result:= true;
            Exit;
         end;
      end;
   end;
  Result :=true;
end;
// 开始页下一步时判断软件是否运行                                                             
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if 1=CurPageID then begin
      Result := KDetectSoft('xksj.exe');
      Exit;
  end; 
  Result:= true;
end;
      
// 卸载时关闭软件
function InitializeUninstall(): Boolean;
begin
  Result := KDetectSoft('xksj.exe');
end;

////卸载时关闭软件
function InitializeSetup(): boolean; 
var  ResultStr: String;  ResultCode: Integer; 
begin 
if RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{207DF7DD-FE24-4D83-85C4-9F7C85630F51}_is1', 'UninstallString', ResultStr) then 
begin
if Msgbox('安装程序检测到客户端已经安装。' #13#13 '单击“是”卸载旧版本并继续安装;或按“否”退出！', mbConfirmation, MB_YESNO) = IDYES then
 begin
 ResultStr := RemoveQuotes(ResultStr);
 Exec(ResultStr, '/silent', '', SW_HIDE, ewWaitUntilTerminated, ResultCode); 
 while RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{207DF7DD-FE24-4D83-85C4-9F7C85630F51}_is1', 'UninstallString', ResultStr) do
 Sleep(100);
 result := true;
 end else begin
 result := false;
 end;
 end else begin 
result := true; 
end ;
end;

[CustomMessages]
chinesesimp.checkSoftTip=安装程序检测到将安装的软件正在运行！%n%n点击"确定"终止软件后继续操作，否则点击"取消"。

[UninstallRun]
Filename: "{pf32}\NiuniuCapture\unins000.exe"; Parameters: "/verysilent /norestart"; Flags: hidewizard runhidden